package TongPhanSO;

import java.util.Scanner;

class PhanSo{
	int x;
	int y;
	public PhanSo(int x, int y) {
		this.x = x;
		this.y = y;
	}
	public int getX() {
		return this.x;
	}
	public void setX(int x) {
		this.x = x;
	}
	public int getY() {
		return y;
	}
	public void setY(int y) {
		this.y = y;
	}
	public int UCLN(int a, int b) {
		if (a%b==0) return b;
		else return UCLN(b,a%b);	
	}
	public void RutGon() {
		int h = this.x;
		this.x = this.x / UCLN(this.x, this.y);
		this.y = this.y / UCLN(h, this.y);
	}
}

class Solve{
	private PhanSo x;
	private PhanSo y;
	public PhanSo getX() {
		return x;
	}
	public void setX(PhanSo x) {
		this.x = x;
	}
	public PhanSo getY() {
		return y;
	}
	public void setY(PhanSo y) {
		this.y = y;
	}
	public Solve(PhanSo x, PhanSo y) {
		super();
		this.x = x;
		this.y = y;
	}
	public int UCLN(int a, int b) {
		if(a % b == 0) return b;
		else return UCLN(b, a % b);
	}
	
	public int BCNN(int a, int b) {
		return (int) ((a * b) / UCLN(a, b));
	}
	public void solve() {
		int h = BCNN(x.y, y.y);
		System.out.println(h);
		System.out.println(x.x * (h / x.y));
	}
}


public class main {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		PhanSo x = new PhanSo(sc.nextInt(), sc.nextInt());
		PhanSo y = new PhanSo(sc.nextInt(), sc.nextInt());
		Solve h = new Solve(x, y);
		h.solve();
	}
}
